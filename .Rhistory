tb_12 <- rbind(tb_12, read.csv2(ls_12[i], header = TRUE)) # Start at row 1
write.table(tb_12 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_12.csv", row.names=FALSE, sep = ",")
}
######## 2013 ########
ls_13 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2013/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_13 <- data.frame()
for(i in 1:length(ls_13)) {
tb_13 <- rbind(tb_13, read.csv2(ls_13[i], header = TRUE)) # Start at row 1
write.table(tb_13 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_13.csv", row.names=FALSE, sep = ",")
}
######## 2014 ########
ls_14 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2014/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_14 <- data.frame()
for(i in 1:length(ls_14)) {
tb_14 <- rbind(tb_14, read.csv2(ls_14[i], header = TRUE)) # Start at row 1
write.table(tb_14 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_14.csv", row.names=FALSE, sep = ",")
}
######## 2015 ########
ls_15 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2015/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_15 <- data.frame()
for(i in 1:length(ls_15)) {
tb_15 <- rbind(tb_15, read.csv2(ls_15[i], header = TRUE)) # Start at row 1
write.table(tb_15 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_15.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
######## 2004 ########
ls_04 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2004/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_04 <- data.frame()
for(i in 1:length(ls_04)) {
tb_04 <- rbind(tb_04, read.csv2(ls_04[i], header = TRUE)) # Start at row 1
write.table(tb_04 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_04.csv", row.names=FALSE, sep = ",")
}
######## 2005 ########
ls_05 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2005/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_05 <- data.frame()
for(i in 1:length(ls_05)) {
tb_05 <- rbind(tb_05, read.csv2(ls_05[i], header = TRUE)) # Start at row 1
write.table(tb_05 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_05.csv", row.names=FALSE, sep = ",")
}
######## 2006 ########
ls_06 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2006/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_06 <- data.frame()
for(i in 1:length(ls_06)) {
tb_06 <- rbind(tb_06, read.csv2(ls_06[i], header = TRUE)) # Start at row 1
write.table(tb_06 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_06.csv", row.names=FALSE, sep = ",")
}
######## 2007 ########
ls_07 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2007/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_07 <- data.frame()
for(i in 1:length(ls_07)) {
tb_07 <- rbind(tb_07, read.csv2(ls_07[i], header = TRUE)) # Start at row 1
write.table(tb_07 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_07.csv", row.names=FALSE, sep = ",")
}
######## 2008 ########
ls_08 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2008/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_08 <- data.frame()
for(i in 1:length(ls_08)) {
tb_08 <- rbind(tb_08, read.csv2(ls_08[i], header = TRUE)) # Start at row 1
write.table(tb_08 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_08.csv", row.names=FALSE, sep = ",")
}
######## 2009 ########
ls_09 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2009/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_09 <- data.frame()
for(i in 1:length(ls_09)) {
tb_09 <- rbind(tb_09, read.csv2(ls_09[i], header = TRUE)) # Start at row 1
write.table(tb_09 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_09.csv", row.names=FALSE, sep = ",")
}
######## 2010 ########
ls_10 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2010/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_10 <- data.frame()
for(i in 1:length(ls_10)) {
tb_10 <- rbind(tb_10, read.csv2(ls_10[i], header = TRUE)) # Start at row 1
write.table(tb_10 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_10.csv", row.names=FALSE, sep = ",")
}
######## 2011 ########
ls_11 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2011/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_11 <- data.frame()
for(i in 1:length(ls_11)) {
tb_11 <- rbind(tb_11, read.csv2(ls_11[i], header = TRUE)) # Start at row 1
write.table(tb_11 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_11.csv", row.names=FALSE, sep = ",")
}
######## 2012 ########
ls_12 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2012/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_12 <- data.frame()
for(i in 1:length(ls_12)) {
tb_12 <- rbind(tb_12, read.csv2(ls_12[i], header = TRUE)) # Start at row 1
write.table(tb_12 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_12.csv", row.names=FALSE, sep = ",")
}
######## 2013 ########
ls_13 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2013/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_13 <- data.frame()
for(i in 1:length(ls_13)) {
tb_13 <- rbind(tb_13, read.csv2(ls_13[i], header = TRUE)) # Start at row 1
write.table(tb_13 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_13.csv", row.names=FALSE, sep = ",")
}
######## 2014 ########
ls_14 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2014/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_14 <- data.frame()
for(i in 1:length(ls_14)) {
tb_14 <- rbind(tb_14, read.csv2(ls_14[i], header = TRUE)) # Start at row 1
write.table(tb_14 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_14.csv", row.names=FALSE, sep = ",")
}
######## 2015 ########
ls_15 <-  list.files("/Users/Mind/Dropbox/FYP/Data/USEP/2015/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_15 <- data.frame()
for(i in 1:length(ls_15)) {
tb_15 <- rbind(tb_15, read.csv2(ls_15[i], header = TRUE)) # Start at row 1
write.table(tb_15 , "/Users/Mind/Dropbox/FYP/Data/Output/USEP_15.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
ls_main <-  list.files("/Users/Mind/Dropbox/FYP/Data/Output/USEP/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_main <- data.frame()
for(i in 1:length(ls_main)) {
tb_main <- rbind(tb_main, read.csv2(ls_main[i], header = TRUE)) # Start at row 1
write.table(tb_main , "/Users/Mind/Dropbox/FYP/Data/USEP_combined.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
ls_main <-  list.files("/Users/Mind/Dropbox/FYP/Data/Output/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_main <- data.frame()
for(i in 1:length(ls_main)) {
tb_main <- rbind(tb_main, read.csv2(ls_main[i], header = TRUE)) # Start at row 1
write.table(tb_main , "/Users/Mind/Dropbox/FYP/Data/USEP_combined.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
ls_main <-  list.files("/Users/Mind/Dropbox/FYP/Data/Output/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_main <- data.frame()
for(i in 1:length(ls_main)) {
tb_main <- rbind(tb_main, read.csv2(ls_main[i], header = TRUE)) # Start at row 1
write.table(tb_main , "/Users/Mind/Dropbox/FYP/Data/USEP_combined.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
ls_main <-  list.files("/Users/Mind/Dropbox/FYP/Data/Output/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_main <- data.frame()
for(i in 1:length(ls_main)) {
tb_main <- rbind(tb_main, read.csv2(ls_main[i], header = TRUE)) # Start at row 1
write.table(tb_main , "/Users/Mind/Dropbox/FYP/Data/USEP_all.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
ls_main <-  list.files("/Users/Mind/Dropbox/FYP/Data/Output/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_main <- data.frame()
for(i in 1:length(ls_main)) {
tb_main <- rbind(tb_main, read.csv2(ls_main[i], header = TRUE)) # Start at row 1
write.table(tb_main , "/Users/Mind/Dropbox/FYP/Data/USEP_all.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
######## 2004 ########
ls_04 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2004/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_04 <- data.frame()
for(i in 1:length(ls_04)) {
tb_04 <- rbind(tb_04, read.csv2(ls_04[i], header = TRUE)) # Start at row 1
write.table(tb_04 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/04.csv", row.names=FALSE, sep = ",")
}
######## 2005 ########
ls_05 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2005/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_05 <- data.frame()
for(i in 1:length(ls_05)) {
tb_05 <- rbind(tb_05, read.csv2(ls_05[i], header = TRUE)) # Start at row 1
write.table(tb_05 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/05.csv", row.names=FALSE, sep = ",")
}
######## 2006 ########
ls_06 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2006/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_06 <- data.frame()
for(i in 1:length(ls_06)) {
tb_06 <- rbind(tb_06, read.csv2(ls_06[i], header = TRUE)) # Start at row 1
write.table(tb_06 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/06.csv", row.names=FALSE, sep = ",")
}
######## 2007 ########
ls_07 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2007/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_07 <- data.frame()
for(i in 1:length(ls_07)) {
tb_07 <- rbind(tb_07, read.csv2(ls_07[i], header = TRUE)) # Start at row 1
write.table(tb_07 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/07.csv", row.names=FALSE, sep = ",")
}
######## 2008 ########
ls_08 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2008/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_08 <- data.frame()
for(i in 1:length(ls_08)) {
tb_08 <- rbind(tb_08, read.csv2(ls_08[i], header = TRUE)) # Start at row 1
write.table(tb_08 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/08.csv", row.names=FALSE, sep = ",")
}
######## 2009 ########
ls_09 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2009/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_09 <- data.frame()
for(i in 1:length(ls_09)) {
tb_09 <- rbind(tb_09, read.csv2(ls_09[i], header = TRUE)) # Start at row 1
write.table(tb_09 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/09.csv", row.names=FALSE, sep = ",")
}
######## 2010 ########
ls_10 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2010/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_10 <- data.frame()
for(i in 1:length(ls_10)) {
tb_10 <- rbind(tb_10, read.csv2(ls_10[i], header = TRUE)) # Start at row 1
write.table(tb_10 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/10.csv", row.names=FALSE, sep = ",")
}
######## 2011 ########
ls_11 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2011/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_11 <- data.frame()
for(i in 1:length(ls_11)) {
tb_11 <- rbind(tb_11, read.csv2(ls_11[i], header = TRUE)) # Start at row 1
write.table(tb_11 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/11.csv", row.names=FALSE, sep = ",")
}
######## 2012 ########
ls_12 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2012/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_12 <- data.frame()
for(i in 1:length(ls_12)) {
tb_12 <- rbind(tb_12, read.csv2(ls_12[i], header = TRUE)) # Start at row 1
write.table(tb_12 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/12.csv", row.names=FALSE, sep = ",")
}
######## 2013 ########
ls_13 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2013/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_13 <- data.frame()
for(i in 1:length(ls_13)) {
tb_13 <- rbind(tb_13, read.csv2(ls_13[i], header = TRUE)) # Start at row 1
write.table(tb_13 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/13.csv", row.names=FALSE, sep = ",")
}
######## 2014 ########
ls_14 <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/2014/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_14 <- data.frame()
for(i in 1:length(ls_14)) {
tb_14 <- rbind(tb_14, read.csv2(ls_14[i], header = TRUE)) # Start at row 1
write.table(tb_14 , "/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/14.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
ls_main <-  list.files("/Users/Mind/Dropbox/FYP/Old Data/Temperature/Output/",pattern = ".csv",full.names=T )
# initialise a data frame
tb_main <- data.frame()
for(i in 1:length(ls_main)) {
tb_main <- rbind(tb_main, read.csv2(ls_main[i], header = TRUE)) # Start at row 1
write.table(tb_main , "/Users/Mind/Dropbox/FYP/Data/temperature_all.csv", row.names=FALSE, sep = ",")
}
x <- factor(c("yes","yes","no","yes"))
x
arguments(read.table)
argument(read.table)
attributes(read.table)
help read.table()
help read.table
help read
help("read.table")
add2 <- function(x,y){
x+y
}
add2(3,4)
columnmean <- function(y){
#check number of columns:
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i])
}
means
}
airquality
columnmean(airquality)
columnmean <- function(y, removeNA = TRUE){
#check number of columns:
nc <- ncol(y)
means <- numeric(nc)
for(i in 1:nc){
means[i] <- mean(y[,i], na.rm=removeNA)
}
means
}
columnmean(airquality)
columnmean(airquality,FALSE)
x <- list(a=1:5, b=rnorm(10))
lapply(x,mean)
y <- lapply(x,mean)
y
?runif
x <- 1:4
lapply(x, function(elt) elt[,1]) #anonymous function -- don't have the name!
lapply(x, function(elt) elt[,1])) #anonymous function -- don't have the name!
x
x
lapply(x, function(elt) elt[,1])) #anonymous function -- don't have the name!
x
lapply(x, function(elt) elt[,1]) #anonymous function -- don't have the name!
lapply(x, function(elt elt[,1]) #anonymous function -- don't have the name!
x
x
lapply(x, function(elt) elt[,1]) #anonymous function -- don't have the name!
clear
x <- 1:4
lapply(x,runif, min=0,max=10) #runif is the random uniform between 0 to 1 (default)
lapply(x, function(elt) elt[,1]) #anonymous function -- don't have the name!
x <- list(a= matrix(1:4,2,2), b= matrix(1:6,3,2))
lapply(x, function(elt) elt[,1]) #anonymous function -- don't have the name!
x <- list(a=1:2,b=3:5)
sapply(x,mean)
str(apply)
str(mapply)
str(mapply)
mapply(rep,1:4,4:1)
?gl
f <- gl(3,10) # generate factor level
x <- c(rnorm(10),runif(10),rnorn(10,1))
x <- c(rnorm(10),runif(10),rnorm(10,1))
f
x
tapply(x,f,mean, simplify=FALSE) # by default it's true, FALSE will give you a list
tapply(x,f,mean) # will take the mean for each group
str(split)
f <- gl(3,10) # generate factor variables
x <- c(rnorm(10),runif(10),rnorm(10,1))
split(x,f) #
head(airquality)
s <- split(airquality, airquality$Month)
s
lapply(s,function(x) colMeans(x[, c("Ozone","Solar.R","Wind")]))
lapply(s,function(x) colMeans(x[, c("Ozone","Solar.R","Wind")], na.rm=TRUE))
sapply(s,function(x) colMeans(x[, c("Ozone","Solar.R","Wind")], na.rm=TRUE))
log(-1)
?invisible
require("rJava")
require("xlsxjars")
require("xlsx")
######## 2004 ########
ls_mc2 <-  list.files("/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/MC m2/",pattern = ".csv",full.names = T)
# initialise a data frame
tb_mc2 <- data.frame()
for(i in 1:length(ls_mc2)) {
tb_mc2 <- rbind(tb_mc2, read.csv2(ls_mc2[i], header = TRUE)) # Start at row 1
write.table(tb_mc2 , "/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/Combined/mc_m2.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
######## MC M2 ########
ls_mc2 <-  list.files("/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/MC m4/",pattern = ".csv",full.names = T)
# initialise a data frame
tb_mc2 <- data.frame()
for(i in 1:length(ls_mc2)) {
tb_mc2 <- rbind(tb_mc2, read.csv2(ls_mc2[i], header = TRUE)) # Start at row 1
write.table(tb_mc2 , "/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/Combined/mc_m4.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
######## MC M2 ########
ls_mc2 <-  list.files("/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/MC m5/",pattern = ".csv",full.names = T)
# initialise a data frame
tb_mc2 <- data.frame()
for(i in 1:length(ls_mc2)) {
tb_mc2 <- rbind(tb_mc2, read.csv2(ls_mc2[i], header = TRUE)) # Start at row 1
write.table(tb_mc2 , "/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/Combined/mc_m5.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
######## MC M2 ########
ls_mc2 <-  list.files("/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/SD m5/",pattern = ".csv",full.names = T)
# initialise a data frame
tb_mc2 <- data.frame()
for(i in 1:length(ls_mc2)) {
tb_mc2 <- rbind(tb_mc2, read.csv2(ls_mc2[i], header = TRUE)) # Start at row 1
write.table(tb_mc2 , "/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/Combined/sd_m5.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
######## MC M2 ########
ls_mc2 <-  list.files("/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/SD m6/",pattern = ".csv",full.names = T)
# initialise a data frame
tb_mc2 <- data.frame()
for(i in 1:length(ls_mc2)) {
tb_mc2 <- rbind(tb_mc2, read.csv2(ls_mc2[i], header = TRUE)) # Start at row 1
write.table(tb_mc2 , "/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/Combined/sd_m6.csv", row.names=FALSE, sep = ",")
}
require("rJava")
require("xlsxjars")
require("xlsx")
######## MC M2 ########
ls_mc2 <-  list.files("/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/Combined/",pattern = ".csv",full.names = T)
# initialise a data frame
tb_mc2 <- data.frame()
for(i in 1:length(ls_mc2)) {
tb_mc2 <- rbind(tb_mc2, read.csv2(ls_mc2[i], header = TRUE)) # Start at row 1
write.table(tb_mc2 , "/Users/Mind/Desktop/Flipped.io/Flipped.io API/Output/Combined/all.csv", row.names=FALSE, sep = ",")
}
rankall <- function(outcome, num = "best") {  ## Read outcome data  dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")  ## Check that state and outcome are valid  if(!state %in% dat[,7]){    stop("invalid state")  }  if(!outcome %in% c("heart attack", "heart failure", "pneumonia")) {    stop("invalid outcome")  }  # Change data type from character to numeric  dat[, 11] <- as.numeric(dat[, 11]) # heart attack  dat[, 17] <- as.numeric(dat[, 17]) # heart failure  dat[, 23] <- as.numeric(dat[, 23]) # pneumonia    # Get number of hospital with data  if(outcome == "heart attack") {    n <- dim(substate[!is.na(substate[,11]), ])[1]  } else if(outcome == "heart failure") {    n <- dim(substate[!is.na(substate[,17]), ])[1]  } else {    n <- dim(substate[!is.na(substate[,23]), ])[1]  }  # Find all states:  statevec <- sort(unique(dat$State))  # Initialize:  hosplist <- rep("", length(statevec))  ## For each state, find the hospital of the given rank  for(i in 1:length(statevec)){    substate <- dat[dat$State == statevec[i], ]    hosname <- substate[,2    if(outcome == "heart attack") {      hosplist[i] <- hosname[order(substate[,11], hosname)[num]]    } else if (outcome == "heart failure") {      hosplist[i] <- hosname[order(substate[,17], hosname)[num]]    } else {      hosplist[i] <- hosname[order(substate[,23], hosname)[num]]     }  }  output <- data.frame("hospital"=hosplist,"state"=statevec)    }
rankall <- function(outcome, num = "best") {  ## Read outcome data  dat <- read.csv("outcome-of-care-measures.csv", colClasses = "character")  ## Check that state and outcome are valid  if(!state %in% dat[,7]){    stop("invalid state")  }  if(!outcome %in% c("heart attack", "heart failure", "pneumonia")) {    stop("invalid outcome")  }  # Change data type from character to numeric  dat[, 11] <- as.numeric(dat[, 11]) # heart attack  dat[, 17] <- as.numeric(dat[, 17]) # heart failure  dat[, 23] <- as.numeric(dat[, 23]) # pneumonia    # Get number of hospital with data  if(outcome == "heart attack") {    n <- dim(substate[!is.na(substate[,11]), ])[1]  } else if(outcome == "heart failure") {    n <- dim(substate[!is.na(substate[,17]), ])[1]  } else {    n <- dim(substate[!is.na(substate[,23]), ])[1]  }  # Find all states:  statevec <- sort(unique(dat$State))  # Initialize:  hosplist <- rep("", length(statevec))  ## For each state, find the hospital of the given rank  for(i in 1:length(statevec)){    substate <- dat[dat$State == statevec[i], ]    hosname <- substate[,2    if(outcome == "heart attack") {      hosplist[i] <- hosname[order(substate[,11], hosname)[num]]    } else if (outcome == "heart failure") {      hosplist[i] <- hosname[order(substate[,17], hosname)[num]]    } else {      hosplist[i] <- hosname[order(substate[,23], hosname)[num]]     }  }  output <- data.frame("hospital"=hosplist,"state"=statevec)    return(output)}
getwd()
setwd("/Users/Mind/Desktop/Clearndata-Coursera")
setwd("/Users/Mind/Desktop/Cleandata-Coursera")
if(!file.exists("data")){
dir.creat("data")
}
if(!file.exists("data")){
dir.create("data")
}
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
library(data.table)
tables()
library(swirml)
library(swirl)
rm(ls()
)
rm(list=ls())
myurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(myurl, destfile = "./data")
download.file(myurl, destfile = "./data/q1.csv")
file <- download.file(myurl, destfile = "./data/q1.csv")
q1data <- read.csv("./data/q1.csv")
head(q1data)
head(q1data$VAL)
sum(q1data$VAL > 1000000)
sum(q1data$VAL > 1000000, na.rm = TRUE)
q1data$VAL <- as.numeric(q1data$VAL)
sum(q1data$VAL > 1000000, na.rm = TRUE)
q1data$VAL
sum(q1data$VAL = 24, na.rm = TRUE)
sum(q1data$VAL == 24, na.rm = TRUE)
q1data$FES
head(q1data$FES)
require(xlsx)
install.packages("xslx")
install.packages("xlsx")
install.packages("xlsx")
require(xlsx)
myurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(myurl, destfile = "./data/q3.csv")
q3data <- read.xlsx("./data/q3.xlsx")
myurl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(myurl, destfile = "./data/q3.xlsx")
q3data <- read.xlsx("./data/q3.xlsx")
q3data <- read.xlsx("./data/q3.xlsx", sheetIndex = 1)
dat <- read.xlsx("./data/q3.xlsx", sheetIndex = 1, colIndex = 7:15, rowIndex = 18:23)
sum(dat$Zip*dat$Ext,na.rm=T)
install.packages("XML")
require(XML)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
fileUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
doc <- xmlTreeParse(fileUrl,useInternal=TRUE, method="Curl")
doc <- xmlTreeParse(fileUrl,useInternal=TRUE, method="curl")
fileUrl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
doc <- xmlTreeParse(fileUrl,useInternal=TRUE)
rootNode <- xmlRoot(doc)
rootNode$zipcode
rootNode[["zipcode"]]
rootNode
sum(xpathSApply(rootNode, "//zipcode", xmlValue) == "21231")
geturl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
fread(geturl)
install.packages("fread")
geturl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(myurl, destfile = "./data/q5.csv")
DT <- fread("./data/q5.csv")
install.packages("data.table")
DT[,mean(pwgtp15),by=SEX]
DT <- fread("./data/q5.csv")
require(data.table)
DT <- fread("./data/q5.csv")
DT <- fread("./data/q5.csv")
DT
geturl <- "http://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(myurl, destfile = "./data/q5.csv")
DT <- fread("./data/q5.csv", )
